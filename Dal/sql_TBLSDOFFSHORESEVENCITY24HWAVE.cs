
using System;
using System.Collections.Generic;
using System.Data.Common;
using System.Linq;
using System.Web;

/// <summary>
/// 山东省近海七市24小时海浪
/// </summary>
/// <returns></returns>
public class sql_TBLSDOFFSHORESEVENCITY24HWAVE
{
    DataExecution DataExe;//声明一个数据执行类
    public sql_TBLSDOFFSHORESEVENCITY24HWAVE()
    {
        //
        DataExe = new DataExecution();//使用默认链接字符初始数据库操作类
        //
    }
    /// <summary>
    /// 获取所有山东省近海七市24小时海浪预报
    /// </summary>
    /// <returns></returns>
    public object get_TBLSDOFFSHORESEVENCITY24HWAVE_AllData(TBLSDOFFSHORESEVENCITY24HWAVE TBLSDOFFSHORESEVENCITY24HWAVE)
    {

        try
        {
            return DataExe.GetTableExeData("select * from TBLSDOFFSHORESEVENCITY24HWAVE where PUBLISHDATE=to_date('" + TBLSDOFFSHORESEVENCITY24HWAVE.PUBLISHDATE.ToString("yyyy-MM-dd") + "', 'yyyy-mm-dd hh24@mi@ss')");

        }
        catch (Exception ex)
        {
            WriteLog.Write("获取山东省近海七市24小时海浪出现异常！" + ex.Message + "\r\n" + ex.StackTrace);
            return 0;
        }
    }
    /// <summary>
    /// 新增山东省近海七市24小时海浪预报
    /// </summary>
    /// <returns></returns>
    public int Add_TBLSDOFFSHORESEVENCITY24HWAVE(TBLSDOFFSHORESEVENCITY24HWAVE TBLSDOFFSHORESEVENCITY24HWAVE, string quanxian)
    {

        string sql = "INSERT INTO  TBLSDOFFSHORESEVENCITY24HWAVE (PUBLISHDATE,SDOSCWAREA,SDOSCWLOWESTWAVEHEIGHT,SDOSCWHIGHTESTWAVEHEIGHT,SDOSCWSURFACETEMPERATURE,SDOSCWESTWAVEHEIGHT48H,SDOSCWESTWAVEHEIGHT72H,SDOSCWSURFACETEMPERATURE48H,SDOSCWSURFACETEMPERATURE72H) VALUES (to_date(@PUBLISHDATE,'yyyy-mm-dd hh24@mi@ss'),@SDOSCWAREA,@SDOSCWLOWESTWAVEHEIGHT,@SDOSCWHIGHTESTWAVEHEIGHT,@SDOSCWSURFACETEMPERATURE,@SDOSCWESTWAVEHEIGHT48H,@SDOSCWESTWAVEHEIGHT72H,@SDOSCWSURFACETEMPERATURE48H,@SDOSCWSURFACETEMPERATURE72H)";



        var PUBLISHDATE = DataExe.GetDbParameter();
        var SDOSCWAREA = DataExe.GetDbParameter();
        var SDOSCWLOWESTWAVEHEIGHT = DataExe.GetDbParameter();
        var SDOSCWHIGHTESTWAVEHEIGHT = DataExe.GetDbParameter();
        var SDOSCWSURFACETEMPERATURE = DataExe.GetDbParameter();
        var SDOSCWESTWAVEHEIGHT48H = DataExe.GetDbParameter();
        var SDOSCWESTWAVEHEIGHT72H = DataExe.GetDbParameter();
        var SDOSCWSURFACETEMPERATURE48H = DataExe.GetDbParameter();
        var SDOSCWSURFACETEMPERATURE72H = DataExe.GetDbParameter();




        PUBLISHDATE.ParameterName = "@PUBLISHDATE";
        SDOSCWAREA.ParameterName = "@SDOSCWAREA";
        SDOSCWLOWESTWAVEHEIGHT.ParameterName = "@SDOSCWLOWESTWAVEHEIGHT";
        SDOSCWHIGHTESTWAVEHEIGHT.ParameterName = "@SDOSCWHIGHTESTWAVEHEIGHT";
        SDOSCWSURFACETEMPERATURE.ParameterName = "@SDOSCWSURFACETEMPERATURE";
        SDOSCWESTWAVEHEIGHT48H.ParameterName = "@SDOSCWESTWAVEHEIGHT48H";
        SDOSCWESTWAVEHEIGHT72H.ParameterName = "@SDOSCWESTWAVEHEIGHT72H";
        SDOSCWSURFACETEMPERATURE48H.ParameterName = "@SDOSCWSURFACETEMPERATURE48H";
        SDOSCWSURFACETEMPERATURE72H.ParameterName = "@SDOSCWSURFACETEMPERATURE72H";




        PUBLISHDATE.Value = TBLSDOFFSHORESEVENCITY24HWAVE.PUBLISHDATE.ToString();
        SDOSCWAREA.Value = TBLSDOFFSHORESEVENCITY24HWAVE.SDOSCWAREA;
        SDOSCWLOWESTWAVEHEIGHT.Value = TBLSDOFFSHORESEVENCITY24HWAVE.SDOSCWLOWESTWAVEHEIGHT;
        SDOSCWHIGHTESTWAVEHEIGHT.Value = TBLSDOFFSHORESEVENCITY24HWAVE.SDOSCWHIGHTESTWAVEHEIGHT;
        SDOSCWSURFACETEMPERATURE.Value = TBLSDOFFSHORESEVENCITY24HWAVE.SDOSCWSURFACETEMPERATURE;
        SDOSCWESTWAVEHEIGHT48H.Value = TBLSDOFFSHORESEVENCITY24HWAVE.SDOSCWESTWAVEHEIGHT48H;
        SDOSCWESTWAVEHEIGHT72H.Value = TBLSDOFFSHORESEVENCITY24HWAVE.SDOSCWESTWAVEHEIGHT72H;
        SDOSCWSURFACETEMPERATURE48H.Value = TBLSDOFFSHORESEVENCITY24HWAVE.SDOSCWSURFACETEMPERATURE48H;
        SDOSCWSURFACETEMPERATURE72H.Value = TBLSDOFFSHORESEVENCITY24HWAVE.SDOSCWSURFACETEMPERATURE72H;


        DbParameter[] parameters = { PUBLISHDATE, SDOSCWAREA, SDOSCWLOWESTWAVEHEIGHT, SDOSCWHIGHTESTWAVEHEIGHT, SDOSCWSURFACETEMPERATURE, SDOSCWESTWAVEHEIGHT48H, SDOSCWESTWAVEHEIGHT72H, SDOSCWSURFACETEMPERATURE48H, SDOSCWSURFACETEMPERATURE72H };
        try
        {
            return DataExe.GetIntExeData(sql, parameters);
        }
        catch (Exception ex)
        {
            WriteLog.Write("新增山东省近海七市24小时海浪出现异常！" + ex.Message + "\r\n" + ex.StackTrace);
            return 0;
        }
    }

    /// <summary>
    /// 修改山东省近海七市3天海浪预报
    /// </summary>
    public int Edit_TBLSDOFFSHORESEVENCITY24HWAVE(TBLSDOFFSHORESEVENCITY24HWAVE TBLSDOFFSHORESEVENCITY24HWAVE, string quanxian)
    {
        string sql = "";
        DbParameter[] parameters = null;
        if (quanxian.ToLower() == "fl")
        {
            sql = "UPDATE   TBLSDOFFSHORESEVENCITY24HWAVE set	SDOSCWLOWESTWAVEHEIGHT=@SDOSCWLOWESTWAVEHEIGHT,SDOSCWESTWAVEHEIGHT48H=@SDOSCWESTWAVEHEIGHT48H,SDOSCWESTWAVEHEIGHT72H=@SDOSCWESTWAVEHEIGHT72H where PUBLISHDATE=to_date(@PUBLISHDATE,'yyyy-mm-dd hh24@mi@ss') and SDOSCWAREA=@SDOSCWAREA";

            var PUBLISHDATE = DataExe.GetDbParameter();
            var SDOSCWAREA = DataExe.GetDbParameter();
            var SDOSCWLOWESTWAVEHEIGHT = DataExe.GetDbParameter();
            var SDOSCWESTWAVEHEIGHT48H = DataExe.GetDbParameter();
            var SDOSCWESTWAVEHEIGHT72H = DataExe.GetDbParameter();





            PUBLISHDATE.ParameterName = "@PUBLISHDATE";
            SDOSCWAREA.ParameterName = "@SDOSCWAREA";
            SDOSCWLOWESTWAVEHEIGHT.ParameterName = "@SDOSCWLOWESTWAVEHEIGHT";
            SDOSCWESTWAVEHEIGHT48H.ParameterName = "@SDOSCWESTWAVEHEIGHT48H";
            SDOSCWESTWAVEHEIGHT72H.ParameterName = "@SDOSCWESTWAVEHEIGHT72H";





            PUBLISHDATE.Value = TBLSDOFFSHORESEVENCITY24HWAVE.PUBLISHDATE.ToString();
            SDOSCWAREA.Value = TBLSDOFFSHORESEVENCITY24HWAVE.SDOSCWAREA;
            SDOSCWLOWESTWAVEHEIGHT.Value = TBLSDOFFSHORESEVENCITY24HWAVE.SDOSCWLOWESTWAVEHEIGHT;
            SDOSCWESTWAVEHEIGHT48H.Value = TBLSDOFFSHORESEVENCITY24HWAVE.SDOSCWESTWAVEHEIGHT48H;
            SDOSCWESTWAVEHEIGHT72H.Value = TBLSDOFFSHORESEVENCITY24HWAVE.SDOSCWESTWAVEHEIGHT72H;



            parameters = new DbParameter[] { PUBLISHDATE, SDOSCWAREA, SDOSCWLOWESTWAVEHEIGHT, SDOSCWESTWAVEHEIGHT48H, SDOSCWESTWAVEHEIGHT72H };
        }
        else if (quanxian.ToLower() == "sw")
        {
            sql = "UPDATE   TBLSDOFFSHORESEVENCITY24HWAVE set	SDOSCWSURFACETEMPERATURE=@SDOSCWSURFACETEMPERATURE, SDOSCWSURFACETEMPERATURE48H=@SDOSCWSURFACETEMPERATURE48H,SDOSCWSURFACETEMPERATURE72H=@SDOSCWSURFACETEMPERATURE72H where PUBLISHDATE=to_date(@PUBLISHDATE,'yyyy-mm-dd hh24@mi@ss') and SDOSCWAREA=@SDOSCWAREA";

            var PUBLISHDATE = DataExe.GetDbParameter();
            var SDOSCWAREA = DataExe.GetDbParameter();

            var SDOSCWSURFACETEMPERATURE = DataExe.GetDbParameter();
            var SDOSCWSURFACETEMPERATURE48H = DataExe.GetDbParameter();
            var SDOSCWSURFACETEMPERATURE72H = DataExe.GetDbParameter();




            PUBLISHDATE.ParameterName = "@PUBLISHDATE";
            SDOSCWAREA.ParameterName = "@SDOSCWAREA";

            SDOSCWSURFACETEMPERATURE.ParameterName = "@SDOSCWSURFACETEMPERATURE";
            SDOSCWSURFACETEMPERATURE48H.ParameterName = "@SDOSCWSURFACETEMPERATURE48H";
            SDOSCWSURFACETEMPERATURE72H.ParameterName = "@SDOSCWSURFACETEMPERATURE72H";




            PUBLISHDATE.Value = TBLSDOFFSHORESEVENCITY24HWAVE.PUBLISHDATE.ToString();
            SDOSCWAREA.Value = TBLSDOFFSHORESEVENCITY24HWAVE.SDOSCWAREA;

            SDOSCWSURFACETEMPERATURE.Value = TBLSDOFFSHORESEVENCITY24HWAVE.SDOSCWSURFACETEMPERATURE;
            SDOSCWSURFACETEMPERATURE48H.Value = TBLSDOFFSHORESEVENCITY24HWAVE.SDOSCWSURFACETEMPERATURE48H;
            SDOSCWSURFACETEMPERATURE72H.Value = TBLSDOFFSHORESEVENCITY24HWAVE.SDOSCWSURFACETEMPERATURE72H;


            parameters = new DbParameter[] { PUBLISHDATE, SDOSCWAREA, SDOSCWSURFACETEMPERATURE, SDOSCWSURFACETEMPERATURE48H, SDOSCWSURFACETEMPERATURE72H };

        }


        try
        {
            return DataExe.GetIntExeData(sql, parameters);
        }
        catch (Exception ex)
        {
            WriteLog.Write("修改山东省近海七市24小时海浪出现异常！" + ex.Message + "\r\n" + ex.StackTrace);
            return 0;
        }
    }
}

