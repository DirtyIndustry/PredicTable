
using System;
using System.Collections.Generic;
using System.Data.Common;
using System.Linq;
using System.Web;

/// <summary>
/// 山东省近海七市24小时潮汐
/// </summary>
/// <returns></returns>
public class sql_TBLSDOFFSHORESEVENCITY24HTIDE
{
    DataExecution DataExe;//声明一个数据执行类
    public sql_TBLSDOFFSHORESEVENCITY24HTIDE()
    {
        //
        DataExe = new DataExecution();//使用默认链接字符初始数据库操作类  
        //
    }

    /// <summary>
    /// 按照地区获取山东近海七市24小时潮汐预报
    /// add by Lian
    /// </summary>
    /// <returns></returns>
    public object get_TBLSDOFFSHORESEVENCITY24HTIDE_AllDataByArea(TBLSDOFFSHORESEVENCITY24HTIDE TBLSDOFFSHORESEVENCITY24HTIDE, string AREANAME)
    {
        try
        {
            return DataExe.GetTableExeData("select * from TBLSDOFFSHORESEVENCITY24HTIDE where PUBLISHDATE=to_date('" + TBLSDOFFSHORESEVENCITY24HTIDE.PUBLISHDATE.ToString("yyyy-MM-dd") + "', 'yyyy-mm-dd hh24@mi@ss') and SDOSCTCITY ='"+ AREANAME + "' ");

        }
        catch (Exception ex)
        {
            WriteLog.Write("获取山东省近海七市24小时潮汐出现异常！" + ex.Message + "\r\n" + ex.StackTrace);
            return 0;
        }
    }


    /// <summary>
    /// 获取所有山东省近海七市24小时潮汐预报
    /// </summary>
    /// <returns></returns>
    public object get_TBLSDOFFSHORESEVENCITY24HTIDE_AllData(TBLSDOFFSHORESEVENCITY24HTIDE TBLSDOFFSHORESEVENCITY24HTIDE)
    {

        try
        {
            return DataExe.GetTableExeData("select * from TBLSDOFFSHORESEVENCITY24HTIDE where PUBLISHDATE=to_date('" + TBLSDOFFSHORESEVENCITY24HTIDE.PUBLISHDATE.ToString("yyyy-MM-dd") + "', 'yyyy-mm-dd hh24@mi@ss')");

        }
        catch (Exception ex)
        {
            WriteLog.Write("获取山东省近海七市24小时潮汐出现异常！" + ex.Message + "\r\n" + ex.StackTrace);
            return 0;
        }
    }

    /// <summary>
    /// 获取所有山东省近海七市24小时潮汐预报
    /// </summary>
    /// <returns></returns>
    public object get24TideData(TBLSDOFFSHORESEVENCITY24HTIDE TBLSDOFFSHORESEVENCITY24HTIDE)
    {

        try
        {
            string sql = "select * from TBLSDOFFSHORESEVENCITY24HTIDE where PUBLISHDATE=to_date('" + TBLSDOFFSHORESEVENCITY24HTIDE.PUBLISHDATE.ToString("yyyy-MM-dd") + "', 'yyyy-mm-dd hh24@mi@ss') and FORECASTDATE=to_date('" + TBLSDOFFSHORESEVENCITY24HTIDE.PUBLISHDATE.AddDays(1).ToString("yyyy-MM-dd") + "', 'yyyy-mm-dd hh24@mi@ss')";
            return DataExe.GetTableExeData(sql);

        }
        catch (Exception ex)
        {
            WriteLog.Write("获取山东省近海七市24小时潮汐出现异常！" + ex.Message + "\r\n" + ex.StackTrace);
            return 0;
        }
    }
    /// <summary>
    /// 新增山东省近海七市24小时潮汐预报
    /// </summary>
    /// <returns></returns>
    public int Add_TBLSDOFFSHORESEVENCITY24HTIDE(TBLSDOFFSHORESEVENCITY24HTIDE TBLSDOFFSHORESEVENCITY24HTIDE)
    {

        string sql = "INSERT INTO  TBLSDOFFSHORESEVENCITY24HTIDE (PUBLISHDATE,FORECASTDATE,SDOSCTSECONDLOWWAVEMINUTE,SDOSCTCITY,SDOSCTFIRSTHIGHWAVEHOUR,SDOSCTFIRSTHIGHWAVEMINUTE,SDOSCTSECONDHIGHWAVEHOUR,SDOSCTSECONDHIGHWAVEMINUTE,SDOSCTFIRSTLOWWAVEHOUR,SDOSCTFIRSTLOWWAVEMINUTE,SDOSCTSECONDLOWWAVEHOUR) VALUES (to_date(@PUBLISHDATE,'yyyy-mm-dd hh24@mi@ss'),to_date(@FORECASTDATE,'yyyy-mm-dd hh24@mi@ss'),@SDOSCTSECONDLOWWAVEMINUTE,@SDOSCTCITY,@SDOSCTFIRSTHIGHWAVEHOUR,@SDOSCTFIRSTHIGHWAVEMINUTE,@SDOSCTSECONDHIGHWAVEHOUR,@SDOSCTSECONDHIGHWAVEMINUTE,@SDOSCTFIRSTLOWWAVEHOUR,@SDOSCTFIRSTLOWWAVEMINUTE,@SDOSCTSECONDLOWWAVEHOUR)";



        var PUBLISHDATE = DataExe.GetDbParameter();
        var FORECASTDATE = DataExe.GetDbParameter();
        var SDOSCTSECONDLOWWAVEMINUTE = DataExe.GetDbParameter();
        var SDOSCTCITY = DataExe.GetDbParameter();
        var SDOSCTFIRSTHIGHWAVEHOUR = DataExe.GetDbParameter();
        var SDOSCTFIRSTHIGHWAVEMINUTE = DataExe.GetDbParameter();
        var SDOSCTSECONDHIGHWAVEHOUR = DataExe.GetDbParameter();
        var SDOSCTSECONDHIGHWAVEMINUTE = DataExe.GetDbParameter();
        var SDOSCTFIRSTLOWWAVEHOUR = DataExe.GetDbParameter();
        var SDOSCTFIRSTLOWWAVEMINUTE = DataExe.GetDbParameter();
        var SDOSCTSECONDLOWWAVEHOUR = DataExe.GetDbParameter();




        PUBLISHDATE.ParameterName = "@PUBLISHDATE";
        FORECASTDATE.ParameterName = "@FORECASTDATE";
        SDOSCTSECONDLOWWAVEMINUTE.ParameterName = "@SDOSCTSECONDLOWWAVEMINUTE";
        SDOSCTCITY.ParameterName = "@SDOSCTCITY";
        SDOSCTFIRSTHIGHWAVEHOUR.ParameterName = "@SDOSCTFIRSTHIGHWAVEHOUR";
        SDOSCTFIRSTHIGHWAVEMINUTE.ParameterName = "@SDOSCTFIRSTHIGHWAVEMINUTE";
        SDOSCTSECONDHIGHWAVEHOUR.ParameterName = "@SDOSCTSECONDHIGHWAVEHOUR";
        SDOSCTSECONDHIGHWAVEMINUTE.ParameterName = "@SDOSCTSECONDHIGHWAVEMINUTE";
        SDOSCTFIRSTLOWWAVEHOUR.ParameterName = "@SDOSCTFIRSTLOWWAVEHOUR";
        SDOSCTFIRSTLOWWAVEMINUTE.ParameterName = "@SDOSCTFIRSTLOWWAVEMINUTE";
        SDOSCTSECONDLOWWAVEHOUR.ParameterName = "@SDOSCTSECONDLOWWAVEHOUR";




        PUBLISHDATE.Value = TBLSDOFFSHORESEVENCITY24HTIDE.PUBLISHDATE.ToString();
        FORECASTDATE.Value = TBLSDOFFSHORESEVENCITY24HTIDE.FORECASTDATE.ToString();
        SDOSCTSECONDLOWWAVEMINUTE.Value = TBLSDOFFSHORESEVENCITY24HTIDE.SDOSCTSECONDLOWWAVEMINUTE;
        SDOSCTCITY.Value = TBLSDOFFSHORESEVENCITY24HTIDE.SDOSCTCITY;
        SDOSCTFIRSTHIGHWAVEHOUR.Value = TBLSDOFFSHORESEVENCITY24HTIDE.SDOSCTFIRSTHIGHWAVEHOUR;
        SDOSCTFIRSTHIGHWAVEMINUTE.Value = TBLSDOFFSHORESEVENCITY24HTIDE.SDOSCTFIRSTHIGHWAVEMINUTE;
        SDOSCTSECONDHIGHWAVEHOUR.Value = TBLSDOFFSHORESEVENCITY24HTIDE.SDOSCTSECONDHIGHWAVEHOUR;
        SDOSCTSECONDHIGHWAVEMINUTE.Value = TBLSDOFFSHORESEVENCITY24HTIDE.SDOSCTSECONDHIGHWAVEMINUTE;
        SDOSCTFIRSTLOWWAVEHOUR.Value = TBLSDOFFSHORESEVENCITY24HTIDE.SDOSCTFIRSTLOWWAVEHOUR;
        SDOSCTFIRSTLOWWAVEMINUTE.Value = TBLSDOFFSHORESEVENCITY24HTIDE.SDOSCTFIRSTLOWWAVEMINUTE;
        SDOSCTSECONDLOWWAVEHOUR.Value = TBLSDOFFSHORESEVENCITY24HTIDE.SDOSCTSECONDLOWWAVEHOUR;


        DbParameter[] parameters = { PUBLISHDATE, FORECASTDATE, SDOSCTSECONDLOWWAVEMINUTE, SDOSCTCITY, SDOSCTFIRSTHIGHWAVEHOUR, SDOSCTFIRSTHIGHWAVEMINUTE, SDOSCTSECONDHIGHWAVEHOUR, SDOSCTSECONDHIGHWAVEMINUTE, SDOSCTFIRSTLOWWAVEHOUR, SDOSCTFIRSTLOWWAVEMINUTE, SDOSCTSECONDLOWWAVEHOUR };
        try
        {
            return DataExe.GetIntExeData(sql, parameters);
        }
        catch (Exception ex)
        {
            WriteLog.Write("新增山东省近海七市24小时潮汐出现异常！" + ex.Message + "\r\n" + ex.StackTrace);
            return 0;
        }
    }

    /// <summary>
    /// 修改山东省近海七市24小时潮汐预报
    /// </summary>
    public int Edit_TBLSDOFFSHORESEVENCITY24HTIDE(TBLSDOFFSHORESEVENCITY24HTIDE TBLSDOFFSHORESEVENCITY24HTIDE)
    {
        string sql = "UPDATE   TBLSDOFFSHORESEVENCITY24HTIDE set SDOSCTSECONDLOWWAVEMINUTE=@SDOSCTSECONDLOWWAVEMINUTE,SDOSCTFIRSTHIGHWAVEHOUR=@SDOSCTFIRSTHIGHWAVEHOUR,SDOSCTFIRSTHIGHWAVEMINUTE=@SDOSCTFIRSTHIGHWAVEMINUTE,SDOSCTSECONDHIGHWAVEHOUR=@SDOSCTSECONDHIGHWAVEHOUR,SDOSCTSECONDHIGHWAVEMINUTE=@SDOSCTSECONDHIGHWAVEMINUTE,SDOSCTFIRSTLOWWAVEHOUR=@SDOSCTFIRSTLOWWAVEHOUR,SDOSCTFIRSTLOWWAVEMINUTE=@SDOSCTFIRSTLOWWAVEMINUTE,SDOSCTSECONDLOWWAVEHOUR=@SDOSCTSECONDLOWWAVEHOUR where PUBLISHDATE=to_date(@PUBLISHDATE,'yyyy-mm-dd hh24@mi@ss') and SDOSCTCITY=@SDOSCTCITY AND FORECASTDATE=to_date(@FORECASTDATE,'yyyy-mm-dd hh24@mi@ss')";


        var PUBLISHDATE = DataExe.GetDbParameter();
        var FORECASTDATE = DataExe.GetDbParameter();
        var SDOSCTSECONDLOWWAVEMINUTE = DataExe.GetDbParameter();
        var SDOSCTCITY = DataExe.GetDbParameter();
        var SDOSCTFIRSTHIGHWAVEHOUR = DataExe.GetDbParameter();
        var SDOSCTFIRSTHIGHWAVEMINUTE = DataExe.GetDbParameter();
        var SDOSCTSECONDHIGHWAVEHOUR = DataExe.GetDbParameter();
        var SDOSCTSECONDHIGHWAVEMINUTE = DataExe.GetDbParameter();
        var SDOSCTFIRSTLOWWAVEHOUR = DataExe.GetDbParameter();
        var SDOSCTFIRSTLOWWAVEMINUTE = DataExe.GetDbParameter();
        var SDOSCTSECONDLOWWAVEHOUR = DataExe.GetDbParameter();




        PUBLISHDATE.ParameterName = "@PUBLISHDATE";
        FORECASTDATE.ParameterName = "@FORECASTDATE";
        SDOSCTSECONDLOWWAVEMINUTE.ParameterName = "@SDOSCTSECONDLOWWAVEMINUTE";
        SDOSCTCITY.ParameterName = "@SDOSCTCITY";
        SDOSCTFIRSTHIGHWAVEHOUR.ParameterName = "@SDOSCTFIRSTHIGHWAVEHOUR";
        SDOSCTFIRSTHIGHWAVEMINUTE.ParameterName = "@SDOSCTFIRSTHIGHWAVEMINUTE";
        SDOSCTSECONDHIGHWAVEHOUR.ParameterName = "@SDOSCTSECONDHIGHWAVEHOUR";
        SDOSCTSECONDHIGHWAVEMINUTE.ParameterName = "@SDOSCTSECONDHIGHWAVEMINUTE";
        SDOSCTFIRSTLOWWAVEHOUR.ParameterName = "@SDOSCTFIRSTLOWWAVEHOUR";
        SDOSCTFIRSTLOWWAVEMINUTE.ParameterName = "@SDOSCTFIRSTLOWWAVEMINUTE";
        SDOSCTSECONDLOWWAVEHOUR.ParameterName = "@SDOSCTSECONDLOWWAVEHOUR";




        PUBLISHDATE.Value = TBLSDOFFSHORESEVENCITY24HTIDE.PUBLISHDATE.ToString();
        FORECASTDATE.Value = TBLSDOFFSHORESEVENCITY24HTIDE.FORECASTDATE.ToString();
        SDOSCTSECONDLOWWAVEMINUTE.Value = TBLSDOFFSHORESEVENCITY24HTIDE.SDOSCTSECONDLOWWAVEMINUTE;
        SDOSCTCITY.Value = TBLSDOFFSHORESEVENCITY24HTIDE.SDOSCTCITY;
        SDOSCTFIRSTHIGHWAVEHOUR.Value = TBLSDOFFSHORESEVENCITY24HTIDE.SDOSCTFIRSTHIGHWAVEHOUR;
        SDOSCTFIRSTHIGHWAVEMINUTE.Value = TBLSDOFFSHORESEVENCITY24HTIDE.SDOSCTFIRSTHIGHWAVEMINUTE;
        SDOSCTSECONDHIGHWAVEHOUR.Value = TBLSDOFFSHORESEVENCITY24HTIDE.SDOSCTSECONDHIGHWAVEHOUR;
        SDOSCTSECONDHIGHWAVEMINUTE.Value = TBLSDOFFSHORESEVENCITY24HTIDE.SDOSCTSECONDHIGHWAVEMINUTE;
        SDOSCTFIRSTLOWWAVEHOUR.Value = TBLSDOFFSHORESEVENCITY24HTIDE.SDOSCTFIRSTLOWWAVEHOUR;
        SDOSCTFIRSTLOWWAVEMINUTE.Value = TBLSDOFFSHORESEVENCITY24HTIDE.SDOSCTFIRSTLOWWAVEMINUTE;
        SDOSCTSECONDLOWWAVEHOUR.Value = TBLSDOFFSHORESEVENCITY24HTIDE.SDOSCTSECONDLOWWAVEHOUR;


        DbParameter[] parameters = { PUBLISHDATE, FORECASTDATE, SDOSCTSECONDLOWWAVEMINUTE, SDOSCTCITY, SDOSCTFIRSTHIGHWAVEHOUR, SDOSCTFIRSTHIGHWAVEMINUTE, SDOSCTSECONDHIGHWAVEHOUR, SDOSCTSECONDHIGHWAVEMINUTE, SDOSCTFIRSTLOWWAVEHOUR, SDOSCTFIRSTLOWWAVEMINUTE, SDOSCTSECONDLOWWAVEHOUR };
        try
        {
            return DataExe.GetIntExeData(sql, parameters);
        }
        catch (Exception ex)
        {
            WriteLog.Write("修改山东省近海七市24小时潮汐出现异常！" + ex.Message + "\r\n" + ex.StackTrace);
            return 0;
        }
    }
}

